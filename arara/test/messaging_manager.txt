
Bootstrap test

>>> import arara.model
>>> arara.model.init_test_database()
>>> import arara
>>> server = arara.get_namespace()

Register one user, combacsa. then login as existing user mikkang

>>> user_reg_dic = {'username':u'combacsa', 'password':u'combacsa', 'nickname':u'combacsa', 'email':u'combacsa', 'signature':u'combacsa', 'self_introduction':u'combacsa', 'default_language':u'english' }
>>> ret, register_key = server.member_manager.register(user_reg_dic)
>>> ret
True
>>> server.member_manager.confirm(u'combacsa', unicode(register_key))
(True, 'OK')
>>> ret, session_key_combacsa = server.login_manager.login(u'combacsa', u'combacsa', '143.248.234.140')
>>> ret
True

# Register one user, mikkang

>>> user_reg_dic = {'username':u'mikkang', 'password':u'mikkang', 'nickname':u'mikkang', 'email':u'mikkang', 'signature':u'mikkang', 'self_introduction':u'mikkang', 'default_language':u'english' }
>>> ret, register_key = server.member_manager.register(user_reg_dic)
>>> ret
True
>>> server.member_manager.confirm(u'mikkang', unicode(register_key))
(True, 'OK')
>>> ret, session_key = server.login_manager.login(u'mikkang', u'mikkang', '143.248.234.140')
>>> ret
True

# Register one user, serialx

>>> user_reg_dic = {'username':u'serialx', 'password':u'serialx', 'nickname':u'serialx', 'email':u'serialx', 'signature':u'serialx', 'self_introduction':u'serialx', 'default_language':u'english' }
>>> ret, register_key = server.member_manager.register(user_reg_dic)
>>> ret
True
>>> server.member_manager.confirm(u'serialx', unicode(register_key))
(True, 'OK')
>>> ret, session_key_serialx = server.login_manager.login(u'serialx', u'serialx', '143.248.234.140')
>>> ret
True

Fake time

>>> import time
>>> def stub_time():
...     return 1.1
>>> org_time = time.time
>>> time.time = stub_time

Login existing user mikkang

>>> server.member_manager.is_registered(u'mikkang')
True
>>> ret, mikkang_session_key = server.login_manager.login(u'mikkang', u'mikkang', '143.248.234.141')
>>> ret
True

Login existing user serialx

>>> ret, serialx_session_key = server.login_manager.login(u'serialx', u'serialx', '143.248.234.140')
>>> ret
True

>>> server.messaging_manager.receive_list(mikkang_session_key)
(True, [{'last_page': 1}])

>>> server.messaging_manager.send_message(serialx_session_key, u'mikkang', u'hello')
(True, 'OK')

>>> server.messaging_manager.receive_list(serialx_session_key)
(True, [{'last_page': 1}])

>>> server.messaging_manager.receive_list(mikkang_session_key)
(True, [{'from': u'serialx', 'blacklisted': False, 'sent_time': datetime.datetime(1970, 1, 1, 9, 0, 1, 100000), 'read_status': u'N', 'to': u'mikkang', 'message': u'hello', 'id': 1}, {'last_page': 1}])

>>> server.messaging_manager.sent_list(mikkang_session_key)
(True, [{'last_page': 1}])

>>> server.messaging_manager.send_message(serialx_session_key, u'mikkang', u'hello2')
(True, 'OK')
>>> server.messaging_manager.receive_list(mikkang_session_key)
(True, [{'from': u'serialx', 'blacklisted': False, 'sent_time': datetime.datetime(1970, 1, 1, 9, 0, 1, 100000), 'read_status': u'N', 'to': u'mikkang', 'message': u'hello2', 'id': 2}, {'from': u'serialx', 'blacklisted': False, 'sent_time': datetime.datetime(1970, 1, 1, 9, 0, 1, 100000), 'read_status': u'N', 'to': u'mikkang', 'message': u'hello', 'id': 1}, {'last_page': 1}])

# now add serialx to blacklist to check blacklist function
>>> server.blacklist_manager.add(mikkang_session_key, u'serialx')
(True, 'OK')

# check blacklist function
>>> server.messaging_manager.receive_list(mikkang_session_key)
(True, [{'from': u'serialx', 'blacklisted': True, 'sent_time': datetime.datetime(1970, 1, 1, 9, 0, 1, 100000), 'read_status': u'N', 'to': u'mikkang', 'message': u'hello2', 'id': 2}, {'from': u'serialx', 'blacklisted': True, 'sent_time': datetime.datetime(1970, 1, 1, 9, 0, 1, 100000), 'read_status': u'N', 'to': u'mikkang', 'message': u'hello', 'id': 1}, {'last_page': 1}])

# now change blacklist status of serialx (block article only)
>>> server.blacklist_manager.modify(mikkang_session_key, {'blacklisted_user_username': u'serialx', 'block_article': True, 'block_message': False})
(True, 'OK')

# check whether message is blocked or not. at this time, nothing should be blocked.
>>> server.messaging_manager.receive_list(mikkang_session_key)
(True, [{'from': u'serialx', 'blacklisted': False, 'sent_time': datetime.datetime(1970, 1, 1, 9, 0, 1, 100000), 'read_status': u'N', 'to': u'mikkang', 'message': u'hello2', 'id': 2}, {'from': u'serialx', 'blacklisted': False, 'sent_time': datetime.datetime(1970, 1, 1, 9, 0, 1, 100000), 'read_status': u'N', 'to': u'mikkang', 'message': u'hello', 'id': 1}, {'last_page': 1}])

# now change blacklist status of serialx again (block message only)
>>> server.blacklist_manager.modify(mikkang_session_key, {'blacklisted_user_username': u'serialx', 'block_article': False, 'block_message': True})
(True, 'OK')

# check whether message is blocked or not. now, it should be blocked.
>>> server.messaging_manager.receive_list(mikkang_session_key)
(True, [{'from': u'serialx', 'blacklisted': True, 'sent_time': datetime.datetime(1970, 1, 1, 9, 0, 1, 100000), 'read_status': u'N', 'to': u'mikkang', 'message': u'hello2', 'id': 2}, {'from': u'serialx', 'blacklisted': True, 'sent_time': datetime.datetime(1970, 1, 1, 9, 0, 1, 100000), 'read_status': u'N', 'to': u'mikkang', 'message': u'hello', 'id': 1}, {'last_page': 1}])

# because it's too poor to keep serialx rot in blacklist, delete serialx from blacklist
>>> server.blacklist_manager.delete(mikkang_session_key, u'serialx')
(True, 'OK')

# re-receive list to check blacklist function
>>> server.messaging_manager.receive_list(mikkang_session_key)
(True, [{'from': u'serialx', 'blacklisted': False, 'sent_time': datetime.datetime(1970, 1, 1, 9, 0, 1, 100000), 'read_status': u'N', 'to': u'mikkang', 'message': u'hello2', 'id': 2}, {'from': u'serialx', 'blacklisted': False, 'sent_time': datetime.datetime(1970, 1, 1, 9, 0, 1, 100000), 'read_status': u'N', 'to': u'mikkang', 'message': u'hello', 'id': 1}, {'last_page': 1}])

>>> server.messaging_manager.sent_list(serialx_session_key)
(True, [{'from': u'serialx', 'sent_time': datetime.datetime(1970, 1, 1, 9, 0, 1, 100000), 'read_status': u'N', 'to': u'mikkang', 'message': u'hello2', 'id': 2}, {'from': u'serialx', 'sent_time': datetime.datetime(1970, 1, 1, 9, 0, 1, 100000), 'read_status': u'N', 'to': u'mikkang', 'message': u'hello', 'id': 1}, {'last_page': 1}])

>>> server.messaging_manager.sent_list(mikkang_session_key)
(True, [{'last_page': 1}])

>>> server.messaging_manager.read_received_message(mikkang_session_key, 1)
(True, {'from': u'serialx', 'sent_time': datetime.datetime(1970, 1, 1, 9, 0, 1, 100000), 'read_status': u'N', 'to': u'mikkang', 'message': u'hello', 'id': 1})

>>> server.messaging_manager.read_received_message(mikkang_session_key, 2)
(True, {'from': u'serialx', 'sent_time': datetime.datetime(1970, 1, 1, 9, 0, 1, 100000), 'read_status': u'N', 'to': u'mikkang', 'message': u'hello2', 'id': 2})

Test Delete Function

>>> server.messaging_manager.delete_message(mikkang_session_key, 2)
(True, 'OK')

>>> server.messaging_manager.read_received_message(mikkang_session_key, 2)
(False, 'MSG_NOT_EXIST')

>>> server.messaging_manager.receive_list(mikkang_session_key)
(True, [{'from': u'serialx', 'blacklisted': False, 'sent_time': datetime.datetime(1970, 1, 1, 9, 0, 1, 100000), 'read_status': u'R', 'to': u'mikkang', 'message': u'hello', 'id': 1}, {'last_page': 1}])

>>> server.messaging_manager.sent_list(serialx_session_key)
(True, [{'from': u'serialx', 'sent_time': datetime.datetime(1970, 1, 1, 9, 0, 1, 100000), 'read_status': u'R', 'to': u'mikkang', 'message': u'hello2', 'id': 2}, {'from': u'serialx', 'sent_time': datetime.datetime(1970, 1, 1, 9, 0, 1, 100000), 'read_status': u'R', 'to': u'mikkang', 'message': u'hello', 'id': 1}, {'last_page': 1}])

>>> server.messaging_manager.delete_message(serialx_session_key, 2)
(True, 'OK')

>>> server.messaging_manager.sent_list(serialx_session_key)
(True, [{'from': u'serialx', 'sent_time': datetime.datetime(1970, 1, 1, 9, 0, 1, 100000), 'read_status': u'R', 'to': u'mikkang', 'message': u'hello', 'id': 1}, {'last_page': 1}])

>>> server.messaging_manager.receive_list(mikkang_session_key)
(True, [{'from': u'serialx', 'blacklisted': False, 'sent_time': datetime.datetime(1970, 1, 1, 9, 0, 1, 100000), 'read_status': u'R', 'to': u'mikkang', 'message': u'hello', 'id': 1}, {'last_page': 1}])

# Test for a lot of message
>>> for i in range(100):
...	ret, _ = server.messaging_manager.send_message(mikkang_session_key, u'serialx', unicode(i))

>>> server.messaging_manager.receive_list(serialx_session_key, 1, 10)
(True, [{'from': u'mikkang', 'blacklisted': False, 'sent_time': datetime.datetime(1970, 1, 1, 9, 0, 1, 100000), 'read_status': u'N', 'to': u'serialx', 'message': u'99', 'id': 101}, {'from': u'mikkang', 'blacklisted': False, 'sent_time': datetime.datetime(1970, 1, 1, 9, 0, 1, 100000), 'read_status': u'N', 'to': u'serialx', 'message': u'98', 'id': 100}, {'from': u'mikkang', 'blacklisted': False, 'sent_time': datetime.datetime(1970, 1, 1, 9, 0, 1, 100000), 'read_status': u'N', 'to': u'serialx', 'message': u'97', 'id': 99}, {'from': u'mikkang', 'blacklisted': False, 'sent_time': datetime.datetime(1970, 1, 1, 9, 0, 1, 100000), 'read_status': u'N', 'to': u'serialx', 'message': u'96', 'id': 98}, {'from': u'mikkang', 'blacklisted': False, 'sent_time': datetime.datetime(1970, 1, 1, 9, 0, 1, 100000), 'read_status': u'N', 'to': u'serialx', 'message': u'95', 'id': 97}, {'from': u'mikkang', 'blacklisted': False, 'sent_time': datetime.datetime(1970, 1, 1, 9, 0, 1, 100000), 'read_status': u'N', 'to': u'serialx', 'message': u'94', 'id': 96}, {'from': u'mikkang', 'blacklisted': False, 'sent_time': datetime.datetime(1970, 1, 1, 9, 0, 1, 100000), 'read_status': u'N', 'to': u'serialx', 'message': u'93', 'id': 95}, {'from': u'mikkang', 'blacklisted': False, 'sent_time': datetime.datetime(1970, 1, 1, 9, 0, 1, 100000), 'read_status': u'N', 'to': u'serialx', 'message': u'92', 'id': 94}, {'from': u'mikkang', 'blacklisted': False, 'sent_time': datetime.datetime(1970, 1, 1, 9, 0, 1, 100000), 'read_status': u'N', 'to': u'serialx', 'message': u'91', 'id': 93}, {'from': u'mikkang', 'blacklisted': False, 'sent_time': datetime.datetime(1970, 1, 1, 9, 0, 1, 100000), 'read_status': u'N', 'to': u'serialx', 'message': u'90', 'id': 92}, {'last_page': 10}])
>>> server.messaging_manager.receive_list(serialx_session_key, 10, 10)
(True, [{'from': u'mikkang', 'blacklisted': False, 'sent_time': datetime.datetime(1970, 1, 1, 9, 0, 1, 100000), 'read_status': u'N', 'to': u'serialx', 'message': u'9', 'id': 11}, {'from': u'mikkang', 'blacklisted': False, 'sent_time': datetime.datetime(1970, 1, 1, 9, 0, 1, 100000), 'read_status': u'N', 'to': u'serialx', 'message': u'8', 'id': 10}, {'from': u'mikkang', 'blacklisted': False, 'sent_time': datetime.datetime(1970, 1, 1, 9, 0, 1, 100000), 'read_status': u'N', 'to': u'serialx', 'message': u'7', 'id': 9}, {'from': u'mikkang', 'blacklisted': False, 'sent_time': datetime.datetime(1970, 1, 1, 9, 0, 1, 100000), 'read_status': u'N', 'to': u'serialx', 'message': u'6', 'id': 8}, {'from': u'mikkang', 'blacklisted': False, 'sent_time': datetime.datetime(1970, 1, 1, 9, 0, 1, 100000), 'read_status': u'N', 'to': u'serialx', 'message': u'5', 'id': 7}, {'from': u'mikkang', 'blacklisted': False, 'sent_time': datetime.datetime(1970, 1, 1, 9, 0, 1, 100000), 'read_status': u'N', 'to': u'serialx', 'message': u'4', 'id': 6}, {'from': u'mikkang', 'blacklisted': False, 'sent_time': datetime.datetime(1970, 1, 1, 9, 0, 1, 100000), 'read_status': u'N', 'to': u'serialx', 'message': u'3', 'id': 5}, {'from': u'mikkang', 'blacklisted': False, 'sent_time': datetime.datetime(1970, 1, 1, 9, 0, 1, 100000), 'read_status': u'N', 'to': u'serialx', 'message': u'2', 'id': 4}, {'from': u'mikkang', 'blacklisted': False, 'sent_time': datetime.datetime(1970, 1, 1, 9, 0, 1, 100000), 'read_status': u'N', 'to': u'serialx', 'message': u'1', 'id': 3}, {'from': u'mikkang', 'blacklisted': False, 'sent_time': datetime.datetime(1970, 1, 1, 9, 0, 1, 100000), 'read_status': u'N', 'to': u'serialx', 'message': u'0', 'id': 2}, {'last_page': 10}])
>>> server.messaging_manager.receive_list(serialx_session_key, 12, 10)
(False, 'WRONG_PAGENUM')

# Test Errors

>>> server.messaging_manager.send_message(u'asdf', u'mikkang', u'hello')
(False, 'NOT_LOGGEDIN')
>>> server.messaging_manager.send_message(serialx_session_key, u'asdf', u'hello')
(False, 'USER_NOT_EXIST')
>>> server.messaging_manager.read_received_message(mikkang_session_key, 3)
(False, 'MSG_NOT_EXIST')
>>> server.messaging_manager.read_received_message(u'asdf', 2)
(False, 'NOT_LOGGEDIN')
>>> server.messaging_manager.delete_message(mikkang_session_key, 109)
(False, 'MSG_NOT_EXIST')
>>> server.messaging_manager.delete_message(serialx_session_key, 109)
(False, 'MSG_NOT_EXIST')
>>> server.messaging_manager.delete_message(mikkang_session_key, 8989)
(False, 'MSG_NOT_EXIST')

>>> time.time = org_time

# Reset the database
>>> import arara.model
>>> arara.model.clear_test_database()
