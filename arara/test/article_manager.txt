load LoginManager & MemberManager

>>> import arara.model
>>> arara.model.init_test_database()
>>> import arara
>>> server = arara.get_namespace()

# Login as SYSOP and create 'garbage' board

>>> ret, session_key_sysop = server.login_manager.login(u'SYSOP', u'SYSOP', u'123.123.123.123')
>>> ret
True

>>> server.board_manager.add_board(unicode(session_key_sysop), u'garbages', u'Garbage Board')
(True, 'OK')

# Read Only Board Test

>>> server.board_manager.add_read_only_board(session_key_sysop, u'garbages')
(True, 'OK')

>>> article_dic = {'title': u'serialx is...', 'content': u'polarbear'}
>>> server.article_manager.write_article(session_key_sysop, u'garbages', article_dic)
(False, 'READ_ONLY_BOARD')

>>> server.board_manager.return_read_only_board(session_key_sysop, u'garbages')
(True, 'OK')


# Register one user, combacsa.

>>> user_reg_dic = {'username':u'combacsa', 'password':u'combacsa', 'nickname':u'combacsa', 'email':u'combacsa', 'signature':u'combacsa', 'self_introduction':u'combacsa', 'default_language':u'english' }
>>> ret, register_key = server.member_manager.register(user_reg_dic)
>>> ret
True
>>> server.member_manager.confirm(u'combacsa', unicode(register_key))
(True, 'OK')
>>> ret, session_key_combacsa = server.login_manager.login(u'combacsa', u'combacsa', u'143.248.234.140')
>>> ret
True

# Register one user, mikkang

>>> user_reg_dic = {'username':u'mikkang', 'password':u'mikkang', 'nickname':u'mikkang', 'email':u'mikkang', 'signature':u'mikkang', 'self_introduction':u'mikkang', 'default_language':u'english' }
>>> ret, register_key = server.member_manager.register(user_reg_dic)
>>> ret
True
>>> server.member_manager.confirm(u'mikkang', unicode(register_key))
(True, 'OK')
>>> ret, session_key = server.login_manager.login(u'mikkang', u'mikkang', u'143.248.234.140')
>>> ret
True

# Register one user, serialx

>>> user_reg_dic = {'username':u'serialx', 'password':u'serialx', 'nickname':u'serialx', 'email':u'serialx', 'signature':u'serialx', 'self_introduction':u'serialx', 'default_language':u'english' }
>>> ret, register_key = server.member_manager.register(user_reg_dic)
>>> ret
True
>>> server.member_manager.confirm(u'serialx', unicode(register_key))
(True, 'OK')
>>> ret, session_key_serialx = server.login_manager.login(u'serialx', u'serialx', u'143.248.234.140')
>>> ret
True

# Faking time.time (to check time field)

>>> import time
>>> def stub_time():
...     return 31536001.1
>>> org_time = time.time
>>> time.time = stub_time

# now Testing Article Manager!

>>> server.board_manager.get_board_list()
(True, [{'read_only': False, 'board_name': u'garbages', 'board_description': u'Garbage Board'}])

# Write an article

>>> article_dic = {'title': u'serialx is...', 'content': u'polarbear'}
>>> server.article_manager.write_article(session_key, u'garbages', article_dic)
(True, 1)

# Read the article

>>> server.article_manager.read(session_key, u'garbages', 1)
(True, [{'author_username': u'mikkang', 'hit': 1, 'blacklisted': False, 'root_id': 1, 'deleted': False, 'last_modified_date': datetime.datetime(1971, 1, 1, 9, 0, 1, 100000), 'is_searchable': True, 'author_nickname': u'mikkang', 'content': u'polarbear', 'vote': 0, 'depth': 1, 'date': datetime.datetime(1971, 1, 1, 9, 0, 1, 100000), 'title': u'serialx is...', 'id': 1}])

# Reply to the article

>>> reply_dic = {'title':u'dummy', 'content': u'asdf'}
>>> server.article_manager.write_reply(session_key, u'garbages', 24, reply_dic)
(False, 'ARTICLE_NOT_EXIST')
>>> server.article_manager.write_reply(session_key, u'garbages', 1, reply_dic)
(True, 2)

# Read the article again

>>> server.article_manager.read(session_key, u'garbages', 1)
(True, [{'author_username': u'mikkang', 'hit': 1, 'blacklisted': False, 'root_id': 1, 'deleted': False, 'last_modified_date': datetime.datetime(1971, 1, 1, 9, 0, 1, 100000), 'is_searchable': True, 'author_nickname': u'mikkang', 'content': u'polarbear', 'vote': 0, 'depth': 1, 'date': datetime.datetime(1971, 1, 1, 9, 0, 1, 100000), 'title': u'serialx is...', 'id': 1}, {'author_username': u'mikkang', 'hit': 0, 'blacklisted': False, 'root_id': 1, 'deleted': False, 'last_modified_date': datetime.datetime(1971, 1, 1, 9, 0, 1, 100000), 'is_searchable': True, 'author_nickname': u'mikkang', 'content': u'asdf', 'vote': 0, 'depth': 2, 'date': datetime.datetime(1971, 1, 1, 9, 0, 1, 100000), 'title': u'dummy', 'id': 2}])

# List the article (should only be one article in the list

>>> server.article_manager.article_list(session_key, u'garbages')
(True, {'last_page': 1, 'hit': [{'author_username': u'mikkang', 'hit': 1, 'title': u'serialx is...', 'deleted': False, 'read_status': 'R', 'last_modified_date': datetime.datetime(1971, 1, 1, 9, 0, 1, 100000), 'author_nickname': u'mikkang', 'date': datetime.datetime(1971, 1, 1, 9, 0, 1, 100000), 'reply_count': 1, 'vote': 0, 'type': 'normal', 'id': 1}], 'results': 1})

# Test for pagination

>>> for i in range(100):
...     if i % 30 == 0:
...         article_dic = {u'title': u'serialx is... ' + unicode(i), u'content': u'polarbear bearbear'}
...     elif i % 50 == 0:
...         article_dic = {u'title': u'serialx is... bearbear' + unicode(i), u'content': u'polarbear'}
...     else:
...         article_dic = {u'title': u'serialx is... ' + unicode(i), u'content': u'polarbear'}
...     _ = server.article_manager.write_article(session_key, u'garbages', article_dic)
>>> ret, l = server.article_manager.article_list(session_key, u'garbages')
>>> l['hit'][0]['title']
u'serialx is... 99'
>>> l['hit'][1]['title']
u'serialx is... 98'
>>> l['hit'][19]['title']
u'serialx is... 80'

>>> ret, l = server.article_manager.article_list(session_key, u'garbages', page=2)
>>> l['last_page']
6

# Read the article to check read_status_manager

>>> _, _ = server.article_manager.read(session_key, u'garbages', 101)
>>> _, _ = server.article_manager.read(session_key, u'garbages', 102)

>>> ret, l = server.article_manager.article_list(session_key, u'garbages')
>>> l['hit'][0]['read_status']
'R'
>>> l['hit'][1]['read_status']
'R'
>>> l['hit'][2]['read_status']
'N'

# Test for deletion

>>> server.article_manager.delete(session_key, u'garbages', 3)
(True, 3)
>>> server.article_manager.read(session_key, u'garbages', 3)
(True, [{'author_username': u'mikkang', 'hit': 1, 'blacklisted': False, 'root_id': 3, 'deleted': True, 'last_modified_date': datetime.datetime(1971, 1, 1, 9, 0, 1, 100000), 'is_searchable': True, 'author_nickname': u'mikkang', 'content': u'polarbear bearbear', 'vote': 0, 'depth': 1, 'date': datetime.datetime(1971, 1, 1, 9, 0, 1, 100000), 'title': u'serialx is... 0', 'id': 3}])
>>> server.article_manager.delete(session_key, u'garbages', 1241252)
(False, 'ARTICLE_NOT_EXIST')
>>> server.article_manager.delete(session_key_serialx, u'garbages', 2)
(False, 'NO_PERMISSION')


# Test for modification

>>> server.article_manager.read(session_key, u'garbages', 1)
(True, [{'author_username': u'mikkang', 'hit': 1, 'blacklisted': False, 'root_id': 1, 'deleted': False, 'last_modified_date': datetime.datetime(1971, 1, 1, 9, 0, 1, 100000), 'is_searchable': True, 'author_nickname': u'mikkang', 'content': u'polarbear', 'vote': 0, 'depth': 1, 'date': datetime.datetime(1971, 1, 1, 9, 0, 1, 100000), 'title': u'serialx is...', 'id': 1}, {'author_username': u'mikkang', 'hit': 0, 'blacklisted': False, 'root_id': 1, 'deleted': False, 'last_modified_date': datetime.datetime(1971, 1, 1, 9, 0, 1, 100000), 'is_searchable': True, 'author_nickname': u'mikkang', 'content': u'asdf', 'vote': 0, 'depth': 2, 'date': datetime.datetime(1971, 1, 1, 9, 0, 1, 100000), 'title': u'dummy', 'id': 2}])
>>> article_dic = {'title': u'pipoket is...', 'content': u'woodori'}
>>> server.article_manager.modify(session_key, u'garbages', 1, article_dic)
(True, 1)
>>> server.article_manager.read(session_key, u'garbages', 1)
(True, [{'author_username': u'mikkang', 'hit': 1, 'blacklisted': False, 'root_id': 1, 'deleted': False, 'last_modified_date': datetime.datetime(1971, 1, 1, 9, 0, 1, 100000), 'is_searchable': True, 'author_nickname': u'mikkang', 'content': u'woodori', 'vote': 0, 'depth': 1, 'date': datetime.datetime(1971, 1, 1, 9, 0, 1, 100000), 'title': u'pipoket is...', 'id': 1}, {'author_username': u'mikkang', 'hit': 0, 'blacklisted': False, 'root_id': 1, 'deleted': False, 'last_modified_date': datetime.datetime(1971, 1, 1, 9, 0, 1, 100000), 'is_searchable': True, 'author_nickname': u'mikkang', 'content': u'asdf', 'vote': 0, 'depth': 2, 'date': datetime.datetime(1971, 1, 1, 9, 0, 1, 100000), 'title': u'dummy', 'id': 2}])

# Now combacsa reads the modified article. The 'hit' should go up.
>>> server.article_manager.read(session_key_combacsa, u'garbages', 1)
(True, [{'author_username': u'mikkang', 'hit': 2, 'blacklisted': False, 'root_id': 1, 'deleted': False, 'last_modified_date': datetime.datetime(1971, 1, 1, 9, 0, 1, 100000), 'is_searchable': True, 'author_nickname': u'mikkang', 'content': u'woodori', 'vote': 0, 'depth': 1, 'date': datetime.datetime(1971, 1, 1, 9, 0, 1, 100000), 'title': u'pipoket is...', 'id': 1}, {'author_username': u'mikkang', 'hit': 0, 'blacklisted': False, 'root_id': 1, 'deleted': False, 'last_modified_date': datetime.datetime(1971, 1, 1, 9, 0, 1, 100000), 'is_searchable': True, 'author_nickname': u'mikkang', 'content': u'asdf', 'vote': 0, 'depth': 2, 'date': datetime.datetime(1971, 1, 1, 9, 0, 1, 100000), 'title': u'dummy', 'id': 2}])

# Now serialx reads the modified article. The 'hit' should go up again.
>>> server.article_manager.read(session_key_serialx, u'garbages', 1)
(True, [{'author_username': u'mikkang', 'hit': 3, 'blacklisted': False, 'root_id': 1, 'deleted': False, 'last_modified_date': datetime.datetime(1971, 1, 1, 9, 0, 1, 100000), 'is_searchable': True, 'author_nickname': u'mikkang', 'content': u'woodori', 'vote': 0, 'depth': 1, 'date': datetime.datetime(1971, 1, 1, 9, 0, 1, 100000), 'title': u'pipoket is...', 'id': 1}, {'author_username': u'mikkang', 'hit': 0, 'blacklisted': False, 'root_id': 1, 'deleted': False, 'last_modified_date': datetime.datetime(1971, 1, 1, 9, 0, 1, 100000), 'is_searchable': True, 'author_nickname': u'mikkang', 'content': u'asdf', 'vote': 0, 'depth': 2, 'date': datetime.datetime(1971, 1, 1, 9, 0, 1, 100000), 'title': u'dummy', 'id': 2}])

# But when combacsa reads the modified article again. The 'hit' won't(and shouldn't) go up.
>>> server.article_manager.read(session_key_combacsa, u'garbages', 1)
(True, [{'author_username': u'mikkang', 'hit': 3, 'blacklisted': False, 'root_id': 1, 'deleted': False, 'last_modified_date': datetime.datetime(1971, 1, 1, 9, 0, 1, 100000), 'is_searchable': True, 'author_nickname': u'mikkang', 'content': u'woodori', 'vote': 0, 'depth': 1, 'date': datetime.datetime(1971, 1, 1, 9, 0, 1, 100000), 'title': u'pipoket is...', 'id': 1}, {'author_username': u'mikkang', 'hit': 0, 'blacklisted': False, 'root_id': 1, 'deleted': False, 'last_modified_date': datetime.datetime(1971, 1, 1, 9, 0, 1, 100000), 'is_searchable': True, 'author_nickname': u'mikkang', 'content': u'asdf', 'vote': 0, 'depth': 2, 'date': datetime.datetime(1971, 1, 1, 9, 0, 1, 100000), 'title': u'dummy', 'id': 2}])

# Now, serialx votes to the modified article
>>> server.article_manager.vote_article(session_key_serialx, u'garbages', 1)
(True, 'OK')

# And serialx wants to re-vote the same article, but he can't :)
>>> server.article_manager.vote_article(session_key_serialx, u'garbages', 1)
(False, 'ALREADY_VOTED')

# Read the article to check the vote status
>>> server.article_manager.read(session_key_combacsa, u'garbages', 1)
(True, [{'author_username': u'mikkang', 'hit': 3, 'blacklisted': False, 'root_id': 1, 'deleted': False, 'last_modified_date': datetime.datetime(1971, 1, 1, 9, 0, 1, 100000), 'is_searchable': True, 'author_nickname': u'mikkang', 'content': u'woodori', 'vote': 1, 'depth': 1, 'date': datetime.datetime(1971, 1, 1, 9, 0, 1, 100000), 'title': u'pipoket is...', 'id': 1}, {'author_username': u'mikkang', 'hit': 0, 'blacklisted': False, 'root_id': 1, 'deleted': False, 'last_modified_date': datetime.datetime(1971, 1, 1, 9, 0, 1, 100000), 'is_searchable': True, 'author_nickname': u'mikkang', 'content': u'asdf', 'vote': 0, 'depth': 2, 'date': datetime.datetime(1971, 1, 1, 9, 0, 1, 100000), 'title': u'dummy', 'id': 2}])

# After some time, mikkang votes to the modified article
>>> server.article_manager.vote_article(session_key, u'garbages', 1)
(True, 'OK')

# Read the article to check the vote status
>>> server.article_manager.read(session_key_combacsa, u'garbages', 1)
(True, [{'author_username': u'mikkang', 'hit': 3, 'blacklisted': False, 'root_id': 1, 'deleted': False, 'last_modified_date': datetime.datetime(1971, 1, 1, 9, 0, 1, 100000), 'is_searchable': True, 'author_nickname': u'mikkang', 'content': u'woodori', 'vote': 2, 'depth': 1, 'date': datetime.datetime(1971, 1, 1, 9, 0, 1, 100000), 'title': u'pipoket is...', 'id': 1}, {'author_username': u'mikkang', 'hit': 0, 'blacklisted': False, 'root_id': 1, 'deleted': False, 'last_modified_date': datetime.datetime(1971, 1, 1, 9, 0, 1, 100000), 'is_searchable': True, 'author_nickname': u'mikkang', 'content': u'asdf', 'vote': 0, 'depth': 2, 'date': datetime.datetime(1971, 1, 1, 9, 0, 1, 100000), 'title': u'dummy', 'id': 2}])

# Now check the today's best article function
>>> server.article_manager.get_today_best_list(5)
(True, [{'author_username': u'mikkang', 'hit': 3, 'title': u'pipoket is...', 'deleted': False, 'last_modified_date': datetime.datetime(1971, 1, 1, 9, 0, 1, 100000), 'author_nickname': u'mikkang', 'board_name': u'garbages', 'date': datetime.datetime(1971, 1, 1, 9, 0, 1, 100000), 'reply_count': 1, 'vote': 2, 'type': 'today', 'id': 1}, {'author_username': u'mikkang', 'hit': 1, 'title': u'serialx is... 99', 'deleted': False, 'last_modified_date': datetime.datetime(1971, 1, 1, 9, 0, 1, 100000), 'author_nickname': u'mikkang', 'board_name': u'garbages', 'date': datetime.datetime(1971, 1, 1, 9, 0, 1, 100000), 'reply_count': 0, 'vote': 0, 'type': 'today', 'id': 102}, {'author_username': u'mikkang', 'hit': 1, 'title': u'serialx is... 98', 'deleted': False, 'last_modified_date': datetime.datetime(1971, 1, 1, 9, 0, 1, 100000), 'author_nickname': u'mikkang', 'board_name': u'garbages', 'date': datetime.datetime(1971, 1, 1, 9, 0, 1, 100000), 'reply_count': 0, 'vote': 0, 'type': 'today', 'id': 101}, {'author_username': u'mikkang', 'hit': 0, 'title': u'serialx is... 97', 'deleted': False, 'last_modified_date': datetime.datetime(1971, 1, 1, 9, 0, 1, 100000), 'author_nickname': u'mikkang', 'board_name': u'garbages', 'date': datetime.datetime(1971, 1, 1, 9, 0, 1, 100000), 'reply_count': 0, 'vote': 0, 'type': 'today', 'id': 100}, {'author_username': u'mikkang', 'hit': 0, 'title': u'serialx is... 96', 'deleted': False, 'last_modified_date': datetime.datetime(1971, 1, 1, 9, 0, 1, 100000), 'author_nickname': u'mikkang', 'board_name': u'garbages', 'date': datetime.datetime(1971, 1, 1, 9, 0, 1, 100000), 'reply_count': 0, 'vote': 0, 'type': 'today', 'id': 99}])

# Check for weekly best article function
>>> server.article_manager.get_weekly_best_list(5)
(True, [{'author_username': u'mikkang', 'hit': 3, 'title': u'pipoket is...', 'deleted': False, 'last_modified_date': datetime.datetime(1971, 1, 1, 9, 0, 1, 100000), 'author_nickname': u'mikkang', 'board_name': u'garbages', 'date': datetime.datetime(1971, 1, 1, 9, 0, 1, 100000), 'reply_count': 1, 'vote': 2, 'type': 'weekly', 'id': 1}, {'author_username': u'mikkang', 'hit': 1, 'title': u'serialx is... 99', 'deleted': False, 'last_modified_date': datetime.datetime(1971, 1, 1, 9, 0, 1, 100000), 'author_nickname': u'mikkang', 'board_name': u'garbages', 'date': datetime.datetime(1971, 1, 1, 9, 0, 1, 100000), 'reply_count': 0, 'vote': 0, 'type': 'weekly', 'id': 102}, {'author_username': u'mikkang', 'hit': 1, 'title': u'serialx is... 98', 'deleted': False, 'last_modified_date': datetime.datetime(1971, 1, 1, 9, 0, 1, 100000), 'author_nickname': u'mikkang', 'board_name': u'garbages', 'date': datetime.datetime(1971, 1, 1, 9, 0, 1, 100000), 'reply_count': 0, 'vote': 0, 'type': 'weekly', 'id': 101}, {'author_username': u'mikkang', 'hit': 0, 'title': u'serialx is... 97', 'deleted': False, 'last_modified_date': datetime.datetime(1971, 1, 1, 9, 0, 1, 100000), 'author_nickname': u'mikkang', 'board_name': u'garbages', 'date': datetime.datetime(1971, 1, 1, 9, 0, 1, 100000), 'reply_count': 0, 'vote': 0, 'type': 'weekly', 'id': 100}, {'author_username': u'mikkang', 'hit': 0, 'title': u'serialx is... 96', 'deleted': False, 'last_modified_date': datetime.datetime(1971, 1, 1, 9, 0, 1, 100000), 'author_nickname': u'mikkang', 'board_name': u'garbages', 'date': datetime.datetime(1971, 1, 1, 9, 0, 1, 100000), 'reply_count': 0, 'vote': 0, 'type': 'weekly', 'id': 99}])

# Board list

>>> server.board_manager.get_board_list()
(True, [{'read_only': False, 'board_name': u'garbages', 'board_description': u'Garbage Board'}])


# Write an article with many replies

>>> article_dic = {'title': u'woodori is...', 'content': u'KIN'}
>>> ret, article_id = server.article_manager.write_article(session_key, u'garbages', article_dic)

# Reply to the article

>>> reply_dic = {'title':u'dummy', 'content': u'asdf'}
>>> ret, article_reply_id = server.article_manager.write_reply(session_key, u'garbages', article_id, reply_dic)
>>> ret, article_reply_id = server.article_manager.write_reply(session_key, u'garbages', article_reply_id, reply_dic)
>>> ret, article_reply_id = server.article_manager.write_reply(session_key, u'garbages', article_reply_id, reply_dic)
>>> ret, article_reply_id = server.article_manager.write_reply(session_key, u'garbages', article_reply_id, reply_dic)

# Read the article

>>> ret, article = server.article_manager.read(session_key, u'garbages', article_id)
>>> article[0]['root_id'] == article_id
True
>>> article[1]['root_id'] == article_id
True
>>> article[2]['root_id'] == article_id
True
>>> article[3]['root_id'] == article_id
True
>>> article[4]['root_id'] == article_id
True
>>> article[0]['root_id'] == article_id
True

>>> article[0]['depth']
1
>>> article[1]['depth']
2
>>> article[2]['depth']
3
>>> article[3]['depth']
4
>>> article[4]['depth']
5

# adding blacklist to test blacklist function

>>> server.blacklist_manager.add(session_key, u'serialx')
(True, 'OK')

# Testing blacklist function

>>> article_dic = {'title': u'woodori is...', 'content': u'123456789012345678901234567890123456789#123456789012345678901234567890'}
>>> ret, article_id = server.article_manager.write_article(session_key_serialx, u'garbages', article_dic)

>>> server.article_manager.read(session_key, u'garbages', article_id)
(True, [{'author_username': u'serialx', 'hit': 1, 'blacklisted': True, 'root_id': 108, 'deleted': False, 'last_modified_date': datetime.datetime(1971, 1, 1, 9, 0, 1, 100000), 'is_searchable': True, 'author_nickname': u'serialx', 'content': u'123456789012345678901234567890123456789#123456789012345678901234567890', 'vote': 0, 'depth': 1, 'date': datetime.datetime(1971, 1, 1, 9, 0, 1, 100000), 'title': u'woodori is...', 'id': 108}])

# delete polarbear from blacklist

>>> server.blacklist_manager.delete(session_key, u'serialx')
(True, 'OK')

# Test article listed below

>>> ret, l = server.article_manager.article_list_below(session_key, u'garbages', 90, 10)
>>> l['hit'][0]['id']
94

>>> ret, l = server.article_manager.article_list_below(session_key, u'garbages', 84, 10)
>>> l['hit'][0]['id']
84

>>> ret, l = server.article_manager.article_list_below(session_key, u'garbages', 95, 10)
>>> l['hit'][0]['id']
108

>>> ret, l = server.article_manager.article_list_below(session_key, u'garbages', 104, 10)
>>> l['hit'][0]['id']
108

# Logout the user

>>> server.login_manager.logout(session_key)
(True, 'OK')

# New Aritlcle List Test

# Restore time to NOW.
>>> time.time = org_time

>>> ret, session_key_mikkang = server.login_manager.login(u'mikkang', u'mikkang', u'143.248.234.140')
>>> ret, session_key_combacsa = server.login_manager.login(u'combacsa', u'combacsa', u'143.248.234.140')

>>> article_dic = {'title': u'serialx is...1', 'content': u'polarbear'}
>>> ret, _ = server.article_manager.write_article(session_key_mikkang, u'garbages', article_dic)
>>> ret
True

>>> server.login_manager.logout(session_key_combacsa)
(True, 'OK')

>>> article_dic = {'title': u'serialx is...2', 'content': u'polarbear'}
>>> ret, _ = server.article_manager.write_article(session_key_mikkang, u'garbages', article_dic)
>>> ret
True

>>> ret, session_key_combacsa = server.login_manager.login(u'combacsa', u'combacsa', u'143.248.234.140')
>>> _, l = server.article_manager.new_article_list(session_key_combacsa)
>>> ret
True
>>> l['hit'][0]['title']
u'serialx is...2'
>>> l['hit'][0]['author_username']
u'mikkang'


Fin!


# Reset the database
>>> import arara.model
>>> arara.model.clear_test_database()
