>>> import random
>>> from collections import defaultdict
>>> from arara import read_status_manager

>>> rs = read_status_manager.ReadStatus('N')

>>> rs.data
[(0, 'N')]
>>> rs.get(0)
'N'
>>> rs.get(1), rs.get(2), rs.get(100)
('N', 'N', 'N')
>>> rs.set(1, 'N')
>>> rs.get(1), rs.get(2), rs.get(100)
('N', 'N', 'N')

>>> rs.get_range(1, 5)
['N', 'N', 'N', 'N', 'N']

>>> rs.data
[(0, 'N')]

>>> rs.set(1, 'V')
>>> rs.data
[(0, 'N'), (1, 'V'), (2, 'N')]

>>> rs.set(0, 'X')
>>> rs.data
[(0, 'X'), (1, 'V'), (2, 'N')]

>>> rs.set(2, 'V')
>>> rs.data
[(0, 'X'), (1, 'V'), (3, 'N')]

>>> rs.get(1), rs.get(2), rs.get(100)
('V', 'V', 'N')

>>> rs.get_range(1, 5)
['V', 'V', 'N', 'N', 'N']



>>> rs = read_status_manager.ReadStatus('N')
>>> rs.set(5, 'K')
>>> rs.set(0, 'X')
>>> rs.get_range(0, 5)
['X', 'N', 'N', 'N', 'N', 'K']



>>> d = defaultdict(lambda: 'N')
>>> rs = read_status_manager.ReadStatus('N')
>>> for i in range(10):
...     n = random.randint(0, 1000)
...     v = chr(random.randint(ord('A'), ord('Z')))
...     d[n] = v
...     rs.set(n, v)
...     assert len(rs.data) <= 1002, repr(rs.data)
...     assert d[n] == rs.get(n)


>>> d = defaultdict(lambda: 'N')
>>> rs = read_status_manager.ReadStatus('N')
>>> log = []
>>> for i in range(20000):
...     n = random.randint(0, 10)
...     v = chr(random.randint(ord('A'), ord('Z')))
...     log.append((n, v))
...     d[n] = v
...     rs.set(n, v)
...     assert len(rs.data) <= 12, repr(rs.data) + "   " + repr(log)
...     assert d[n] == rs.get(n)


>>> d = defaultdict(lambda: 'N')
>>> rs = read_status_manager.ReadStatus('N')
>>> for i in range(10000):
...     n = abs(int(random.gauss(500, 10)))
...     v = chr(random.randint(ord('A'), ord('C')))
...     d[n] = v
...     rs.set(n, v)
...     assert d[n] == rs.get(n)


>>> d = defaultdict(lambda: 'N')
>>> rs = read_status_manager.ReadStatus('N')
>>> for i in range(10000):
...     n = abs(int(random.gauss(500000000, 100000000)))
...     #n = abs(int(random.gauss(5, 1)))
...     v = chr(random.randint(ord('A'), ord('C')))
...     d[n] = v
...     rs.set(n, v)
...     assert d[n] == rs.get(n)


>>> import sys
>>> #print >> sys.stderr, rs.data
